.TH "NoeudComposite" 3 "Mon Feb 15 2016" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
NoeudComposite \- Implantation d'un noeud du patron composite qui peut posséder des enfants\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <NoeudComposite\&.h>\fP
.PP
Inherits \fBNoeudAbstrait\fP\&.
.PP
Inherited by \fBArbreRendu\fP, \fBNoeudDuplication\fP, \fBNoeudLigne\fP, \fBNoeudRobot\fP, and \fBNoeudTable\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBNoeudComposite\fP (const std::string &type=std::string{''})"
.br
.RI "\fIConstructeur\&. \fP"
.ti -1c
.RI "virtual \fB~NoeudComposite\fP ()"
.br
.RI "\fIDestructeur\&. \fP"
.ti -1c
.RI "virtual unsigned int \fBcalculerProfondeur\fP () const "
.br
.RI "\fICalcule la profondeur de l'arbre sous le noeud courant\&. \fP"
.ti -1c
.RI "virtual void \fBvider\fP ()"
.br
.RI "\fIVide le noeud de ses enfants\&. \fP"
.ti -1c
.RI "virtual void \fBeffacer\fP (const \fBNoeudAbstrait\fP *noeud)"
.br
.RI "\fIEfface le noeud passé en paramètre\&. \fP"
.ti -1c
.RI "virtual const \fBNoeudAbstrait\fP * \fBchercher\fP (const std::string &typeNoeud) const "
.br
.RI "\fICherche un noeud par le type (sur un noeud constant)\&. \fP"
.ti -1c
.RI "virtual \fBNoeudAbstrait\fP * \fBchercher\fP (const std::string &typeNoeud)"
.br
.RI "\fICherche un noeud par le type\&. \fP"
.ti -1c
.RI "virtual const \fBNoeudAbstrait\fP * \fBchercher\fP (unsigned int indice) const "
.br
.RI "\fICherche un noeud enfant selon l'indice (sur un noeud constant)\&. \fP"
.ti -1c
.RI "virtual \fBNoeudAbstrait\fP * \fBchercher\fP (unsigned int indice)"
.br
.RI "\fICherche un noeud enfant selon l'indice\&. \fP"
.ti -1c
.RI "virtual bool \fBajouter\fP (std::shared_ptr< \fBNoeudAbstrait\fP > enfant)"
.br
.RI "\fIAjoute un noeud enfant\&. \fP"
.ti -1c
.RI "virtual unsigned int \fBobtenirNombreEnfants\fP () const "
.br
.RI "\fIObtient le nombre d'enfants du noeud\&. \fP"
.ti -1c
.RI "virtual void \fBeffacerSelection\fP ()"
.br
.RI "\fIEfface les enfants sélectionnés\&. \fP"
.ti -1c
.RI "virtual void \fBselectionnerTout\fP ()"
.br
.RI "\fISélectionne tous les enfants de même que le noeud\&. \fP"
.ti -1c
.RI "virtual void \fBdeselectionnerTout\fP ()"
.br
.RI "\fIDésélectionne tous les enfants de même que le noeud\&. \fP"
.ti -1c
.RI "virtual bool \fBselectionExiste\fP () const "
.br
.RI "\fIVérifier si le noeud ou un de ses enfants est sélectionné\&. \fP"
.ti -1c
.RI "virtual void \fBchangerModePolygones\fP (bool estForce)"
.br
.RI "\fIChange le mode d'affichage des polygones\&. \fP"
.ti -1c
.RI "virtual void \fBassignerModePolygones\fP (GLenum modePolygones)"
.br
.RI "\fIAssigne le mode d'affichage des polygones\&. \fP"
.ti -1c
.RI "virtual void \fBafficherConcret\fP () const "
.br
.RI "\fIAffiche le noeud de manière concrète\&. \fP"
.ti -1c
.RI "virtual void \fBanimer\fP (float dt)"
.br
.RI "\fIAnime le noeud\&. \fP"
.ti -1c
.RI "std::shared_ptr< const \fBNoeudAbstrait\fP > \fBgetEnfant\fP (int indice) const "
.br
.ti -1c
.RI "std::vector< std::shared_ptr< \fBNoeudAbstrait\fP > > & \fBgetEnfants\fP ()"
.br
.in -1c
.SS "Protected Types"

.in +1c
.ti -1c
.RI "using \fBconteneur_enfants\fP = std::vector< std::shared_ptr< \fBNoeudAbstrait\fP >>"
.br
.RI "\fILe choix du conteneur pour les enfants\&. \fP"
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBconteneur_enfants\fP \fBenfants_\fP"
.br
.RI "\fILa liste des enfants\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Implantation d'un noeud du patron composite qui peut posséder des enfants\&. 

Cette classe implante les différentes fonctions relatives aux enfants, comme l'ajout, le retrait, la recherche, etc\&.
.PP
\fBAuthor:\fP
.RS 4
DGI-2990 
.RE
.PP
\fBDate:\fP
.RS 4
2007-01-24 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
