.TH "FacadeModele" 3 "Mon Feb 15 2016" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
FacadeModele \- Classe qui constitue une interface (une façade) sur l'ensemble du modèle et des classes qui le composent\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <FacadeModele\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fB~FacadeModele\fP ()"
.br
.RI "\fIDestructeur\&. \fP"
.ti -1c
.RI "void \fBinitialiserOpenGL\fP (HWND hWnd)"
.br
.RI "\fICrée un contexte OpenGL et initialise celui-ci\&. \fP"
.ti -1c
.RI "void \fBchargerConfiguration\fP () const "
.br
.RI "\fICharge la configuration à partir d'un fichier XML\&. \fP"
.ti -1c
.RI "void \fBenregistrerConfiguration\fP () const "
.br
.RI "\fIEnregistre la configuration courante dans un fichier XML\&. \fP"
.ti -1c
.RI "void \fBlibererOpenGL\fP ()"
.br
.RI "\fILibère le contexte OpenGL\&. \fP"
.ti -1c
.RI "void \fBafficher\fP () const "
.br
.RI "\fIAffiche le contenu du modèle\&. \fP"
.ti -1c
.RI "void \fBafficherBase\fP () const "
.br
.RI "\fIAffiche la base du contenu du modèle\&. \fP"
.ti -1c
.RI "void \fBassignerEtat\fP (Etat etat)"
.br
.RI "\fIModifie l'etat courant\&. \fP"
.ti -1c
.RI "\fBEtatAbstrait\fP * \fBobtenirEtat\fP ()"
.br
.ti -1c
.RI "void \fBassignerMode\fP (Mode mode)"
.br
.RI "\fIModifie l'etat courant\&. \fP"
.ti -1c
.RI "\fBModeAbstrait\fP * \fBobtenirMode\fP ()"
.br
.ti -1c
.RI "int \fBobtenirNombreSelection\fP ()"
.br
.ti -1c
.RI "bool \fBobtenirAutorisationInputSouris\fP () const "
.br
.ti -1c
.RI "void \fBassignerAutorisationInputSouris\fP (const bool &autorisation)"
.br
.ti -1c
.RI "bool \fBobtenirAutorisationInputClavier\fP () const "
.br
.ti -1c
.RI "void \fBassignerAutorisationInputClavier\fP (const bool &autorisation)"
.br
.ti -1c
.RI "double \fBobtenirAngleRotation\fP ()"
.br
.ti -1c
.RI "double \fBobtenirFacteurMiseAEchelle\fP ()"
.br
.ti -1c
.RI "double \fBobtenirPositionRelativeX\fP ()"
.br
.ti -1c
.RI "double \fBobtenirPositionRelativeY\fP ()"
.br
.ti -1c
.RI "void \fBassignerAngleRotation\fP (const double &angle)"
.br
.ti -1c
.RI "void \fBassignerFacteurMiseAEchelle\fP (const double &facteurMiseAEchelle)"
.br
.ti -1c
.RI "void \fBassignerPositionRelativeX\fP (const double &positionRelativeX)"
.br
.ti -1c
.RI "void \fBassignerPositionRelativeY\fP (const double &positionRelativeY)"
.br
.ti -1c
.RI "vue::Vue * \fBobtenirVue\fP ()"
.br
.RI "\fIRetourne la vue courante\&. \fP"
.ti -1c
.RI "\fBArbreRenduINF2990\fP * \fBobtenirArbreRenduINF2990\fP () const "
.br
.RI "\fIRetourne l'arbre de rendu\&. \fP"
.ti -1c
.RI "\fBArbreRenduINF2990\fP * \fBobtenirArbreRenduINF2990\fP ()"
.br
.RI "\fIRetourne l'arbre de rendu\&. \fP"
.ti -1c
.RI "void \fBreinitialiser\fP ()"
.br
.RI "\fIRéinitialise la scène\&. \fP"
.ti -1c
.RI "void \fBanimer\fP (float temps)"
.br
.RI "\fIAnime la scène\&. \fP"
.ti -1c
.RI "void \fBstopAffichage\fP ()"
.br
.ti -1c
.RI "void \fBcontinuerAffichage\fP ()"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBFacadeModele\fP * \fBobtenirInstance\fP ()"
.br
.RI "\fIObtient l'instance unique de la classe\&. \fP"
.ti -1c
.RI "static void \fBlibererInstance\fP ()"
.br
.RI "\fILibère l'instance unique de la classe\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Classe qui constitue une interface (une façade) sur l'ensemble du modèle et des classes qui le composent\&. 


.PP
\fBAuthor:\fP
.RS 4
Martin Bisson 
.RE
.PP
\fBDate:\fP
.RS 4
2007-02-20 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
